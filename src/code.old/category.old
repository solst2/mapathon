import React, { useState, Component, useEffect, useRef } from "react";
import {FormInput} from "../components/FormInput";
import {Multiselect} from "multiselect-react-dropdown";
import targetIcon from "../icons/target.png";
import deleteIcon from "../icons/delete.png";
import shareIcon from "../icons/share.png";
import {useAuth0} from "../react-auth0-spa";
import requestPOI from "../utils/requestPOI";
import {Redirect} from "react-router-dom";

export default function CategoryManager(props) {
    let [categories, setAllcategories] = useState([]);
    let [category,setCategory]=useState({name:'',group:'',image:''});
    const {
        isAuthenticated,
        loginWithRedirect,
        loading,
        getTokenSilently,
        logout,
        user
    } = useAuth0();
    useEffect(() => {
        const fn = async () => {


                setAllcategories (await getAllO('category'));

        };
        fn();
    }, [isAuthenticated, loginWithRedirect, loading]);
    async function getAllO(object) {
        return await requestPOI.getAllObject(getTokenSilently, loginWithRedirect, object);
    }

        function handleInputChange (event) {

            const target = event.target;
            const value = target.value;
            const name = target.name;
            let updatedCat = ({...category})
            updatedCat[name]=value
         setCategory(updatedCat);
        }

      async  function  handlecatAdd  (event) {
            // Avoid reloading the page on form submission
            event.preventDefault();
            await requestPOI.addNewObject("category",category, getTokenSilently, loginWithRedirect);
          setCategory(await getAllO('category'));
        }   function  AddCategory  (event) {

            event.preventDefault();

        setCategory(   categories.push({name:'',group:'',image:'',iscreated:true}));

        }

    if(!isAuthenticated)
    {return (
        <Redirect to="/" />)
    }

    return (


          <div>
            <form onSubmit={handlecatAdd}>
                
                <table className="center">
                    <tbody>
                    <tr>
                        <td >Name</td>
                        <td >Marker</td>
                        <td >Creator</td>


                    </tr>
                    { categories.map(cat=>{
                        if(cat.iscreated)
                            return   <tr >
                                <td>
                                    <FormInput
                                        type="text"
                                        name="name"
                                        placeholder="name"
                                        value={category.name}
                                        onChange={handleInputChange}
                                    />
                                </td>
                                <td>
                                    <FormInput
                                        type="text"
                                        name="image"
                                        placeholder="marker"
                                        value={category.image}
                                        onChange={handleInputChange}
                                    />
                                </td>
                                <td> <button>Save</button></td>
                            </tr>

                        return   <tr>
                            <td >{cat.name}</td>
                            <td ><img width={50} height={50} src={cat.image}/></td>
                            <td >{cat.Creator.name}</td>
                        </tr>
                    })}
                    <tr></tr>
                    </tbody>
                </table>
                <button style={{width:1000}} onClick={AddCategory}>Add category</button>
            </form>
        </div>
);

}